- name: Setup admin
  become: yes
  hosts: k8s-admin
  roles:
    - role: k8s_install_kubectl
      kube_version: "{{ kube.version }}"
      kube_release_base_url: "{{ kube.release_base_url }}"
    - role: generate_certificates
      certs_temp_dir: "{{ certificates.temp_dir }}"
      certificate_list:
        - "{{ certificates.ca }}"
        - "{{ certificates.admin }}"
        - "{{ certificates.kube_controller_manager }}"
        - "{{ certificates.kube_proxy }}"
        - "{{ certificates.kube_scheduler }}"
        - "{{ certificates.kube_apiserver }}"
        - "{{ certificates.apiserver_kubelet_client }}"
        - "{{ certificates.etcd_server }}"
        - "{{ certificates.service_account }}"
        - "{{ certificates.worker1 }}"
    - role: k8s_check_certificates
      user: "root"
      cert_dir: "/root/certs"

- name: Distribute certs
  become: yes
  hosts: k8s
  vars:
    kube_pki_dir: "{{ kube.pki_dir }}"
    certs_temp_dir: "{{ certificates.temp_dir }}"
    k8s_master1_hostname: "{{ k8s_master1.hostname }}"
    k8s_worker1_hostname: "{{ k8s_worker1.hostname }}"
    k8s_worker2_hostname: "{{ k8s_worker2.hostname }}"
    cert_key_list:
      - "{{ certificates.ca.name }}.crt"
      - "{{ certificates.ca.name }}.key"
      - "{{ certificates.admin.name }}.crt"
      - "{{ certificates.admin.name }}.key"
      - "{{ certificates.kube_apiserver.name }}.crt"
      - "{{ certificates.kube_apiserver.name }}.key"
      - "{{ certificates.service_account.name }}.crt"
      - "{{ certificates.service_account.name }}.key"
      - "{{ certificates.apiserver_kubelet_client.name }}.crt"
      - "{{ certificates.apiserver_kubelet_client.name }}.key"
      - "{{ certificates.etcd_server.name }}.crt"
      - "{{ certificates.etcd_server.name }}.key"
      - "{{ certificates.kube_scheduler.name }}.crt"
      - "{{ certificates.kube_scheduler.name }}.key"
      - "{{ certificates.kube_controller_manager.name }}.crt"
      - "{{ certificates.kube_controller_manager.name }}.key"
    cert_key_worker1_list:
      - "{{ certificates.ca.name }}.crt"
      - "{{ certificates.kube_proxy.name }}.crt"
      - "{{ certificates.kube_proxy.name }}.key"
      - "{{ certificates.worker1.name }}.crt"
      - "{{ certificates.worker1.name }}.key"
    cert_key_worker2_list:
      - "{{ certificates.ca.name }}.crt"
      - "{{ certificates.kube_proxy.name }}.crt"
      - "{{ certificates.kube_proxy.name }}.key"
  tasks:
    - name: create /var/lib/kubernetes/pki dir
      file:
        path: "{{ kube_pki_dir }}"
        state: directory
        owner: root
        mode: 0700

    - name: Sync certs to Masters
      include_role:
        name: sync_files
      vars:
        sync_files: {
          "filename": "{{ outer_item }}",
          "source_path": "{{ certs_temp_dir }}/",
          "dest_path": '{{ kube_pki_dir }}',
          "mode": 600,
          "owner": "root",
          src_hostname: "{{ k8s_master1.hostname }}"
        }
        dest_hosts: "{{ groups['k8s-master']}}"
      loop: "{{ cert_key_list }}"
      loop_control:
        loop_var: outer_item

    - name: Sync cert worker 1
      include_role:
        name: sync_files
      vars:
        sync_files: {
          "filename": "{{ outer_item }}",
          "source_path": "{{ certs_temp_dir }}/",
          "dest_path": '{{ kube_pki_dir }}',
          "mode": 600,
          "owner": "root",
          src_hostname: "{{ k8s_master1_hostname }}"
        }
        dest_hosts:
          - "{{ k8s_worker1_hostname }}"
      loop: "{{ cert_key_worker1_list }}"
      loop_control:
        loop_var: outer_item

    - name: Sync cert worker 2
      include_role:
        name: sync_files
      vars:
        sync_files: {
          "filename": "{{ outer_item }}",
          "source_path": "{{ certs_temp_dir }}/",
          "dest_path": '{{ kube_pki_dir }}',
          "mode": 600,
          "owner": "root",
          src_hostname: "{{ k8s_master1_hostname }}"
        }
        dest_hosts:
          - "{{ k8s_worker2_hostname }}"
      loop: "{{ cert_key_worker2_list }}"
      loop_control:
        loop_var: outer_item

- name: Create and distribute konfig files
  become: yes
  hosts: k8s
  roles:
    - role: k8s_config_files_with_template
      kube_lib_dir: "{{ kube.lib_dir }}"
      kube_pki_dir: "{{ kube.pki_dir }}"
      cluster: "{{ cluster_name }}"
      lb_address: "{{ k8s_lb.ip }}"
      kube_apiserver_port: "{{ kube.services.kube_apiserver.port }}"
      kube_proxy_user: "{{ kubeconfig.kube_proxy.user }}"
      kube_proxy_service: "{{ kubeconfig.kube_proxy.service }}"
      kube_proxy_dir: "{{ kube.services.kube_proxy.config_folder }}"
      admin_user: "{{ kubeconfig.admin.user }}"
      admin_service: "{{ kubeconfig.admin.service }}"
      kube_scheduler_user: "{{ kubeconfig.kube_scheduler.user }}"
      kube_scheduler_service: "{{ kubeconfig.kube_scheduler.service }}"
      kube_controller_manager_user: "{{ kubeconfig.kube_controller_manager.user }}"
      kube_controller_manager_service: "{{ kubeconfig.kube_controller_manager.service }}"
      worker1_service: "{{ kubeconfig.worker1.service }}"
      worker1_user: "{{ kubeconfig.worker1.user }}"
      kubelet_dir: "{{ kube.services.kubelet.config_folder }}"
      kubelet_service: "{{ kube.services.kubelet.name }}"
      worker_list:
        - "{{ k8s_worker1.hostname }}"
        - "{{ k8s_worker2.hostname }}"
      master_list:
        - "{{ k8s_master1.hostname }}"
        - "{{ k8s_master2.hostname }}"
      k8s_worker_hostname: "{{ k8s_worker1.hostname }}"
    - role: k8s_encryption_key
      key: "{{ encryption_key }}"
      kube_encryption_config_file: "{{ kube.encryption_config_file }}"
      kube_lib_dir: "{{ kube.lib_dir }}"
      master_list:
        - "{{ k8s_master1.hostname }}"
        - "{{ k8s_master2.hostname }}"